version: '3'
name: 'mongo-sharding-repl'
services:
  #сервер конфигурации
  configSrv:
    image: mongo:latest # docker образ
    container_name: configSrv 
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",  #запуск в режиме конфигурации
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  #1-й шард мастер
  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27018:27018"
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr", #запуск в режиме шардинга
        "--replSet",
        "shard1", #название реплики
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      
  #1-й шард, реплики
  shard1_repl1:
    image: mongo:latest
    container_name: shard1_repl1
    restart: always
    ports:
      - "27010:27010"
    volumes:
      - shard1_repl1-data:/data/db
    command:
      [
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27010"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard1_repl2:
    image: mongo:latest
    container_name: shard1_repl2
    restart: always
    ports:
      - "27011:27011"
    volumes:
      - shard1_repl2-data:/data/db
    command:
      [
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27011"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard1_repl3:
    image: mongo:latest
    container_name: shard1_repl3
    restart: always
    ports:
      - "27012:27012"
    volumes:
      - shard1_repl3-data:/data/db
    command:
      [
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27012"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  #2-й шард 
  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27019:27019"
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr", #запуск в режиме шардинга
        "--replSet",
        "shard2", #название реплик
        "--bind_ip_all", #обратите внимание - она отличается от реплики 1-го шарда
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  #2-й шард, реплики
  shard2_repl1:
    image: mongo:latest
    container_name: shard2_repl1
    restart: always
    ports:
      - "27005:27005"
    volumes:
      - shard2_repl1-data:/data/db
    command:
      [
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27005"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard2_repl2:
    image: mongo:latest
    container_name: shard2_repl2
    restart: always
    ports:
      - "27006:27006"
    volumes:
      - shard2_repl2-data:/data/db
    command:
      [
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27006"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard2_repl3:
    image: mongo:latest
    container_name: shard2_repl3
    restart: always
    ports:
      - "27007:27007"
    volumes:
      - shard2_repl3-data:/data/db
    command:
      [
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27007"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  #роутер
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    command:
      [
        "mongos", #обычная mongo в режиме роутера
        "--configdb", 
        "config_server/configSrv:27017", #** #передача данных сервера конфигурации
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"


volumes:
  config-data:
  shard1-data:
  shard2-data:
  shard1_repl1-data:
  shard1_repl2-data:
  shard1_repl3-data:
  shard2_repl1-data:
  shard2_repl2-data:
  shard2_repl3-data:
